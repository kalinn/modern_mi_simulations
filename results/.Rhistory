mycols = rep (c ("#D55E00", "#E69F00", "#2271B2", "#3DB7E9", "#359B73"), 5)
ggMD = ggplot (md, aes (x=X, y=value, fill=X)) +
facet_wrap(~prop) + geom_boxplot() +
ylab("Average (imputations) Mean (observations within imputation) Difference") +
xlab("") +
theme(legend.position = 'none',
axis.text.x = element_text(angle = 45, hjust = 1, size=8)) +
scale_fill_manual(values=mycols)
plot (ggMD)
ggMD = ggplot (md, aes (x=X, y=value, fill=X)) +
facet_wrap(~prop) + geom_boxplot() +
ylab("Average (imputations) Mean (observations within imputation) Difference") +
xlab("") +
theme(legend.position = 'none',
axis.text.x = element_text(angle = 75, hjust = 1, size=8)) +
scale_fill_manual(values=mycols)
plot (ggMD)
ggMD = ggplot (md, aes (x=X, y=value, fill=X)) +
facet_wrap(~prop) + geom_boxplot() +
ylab("Avg (imputations) Mean (obs in imp) Difference") +
xlab("") +
theme(legend.position = 'none',
axis.text.x = element_text(angle = 75, hjust = 1, size=8)) +
scale_fill_manual(values=mycols)
plot (ggMD)
ggMD = ggplot (md, aes (x=X, y=value, fill=X)) +
facet_wrap(~prop) + geom_boxplot() +
ylab("Avg (imputations) Mean (obs in imp) Difference") +
xlab("") +
theme(legend.position = 'none',
axis.text.x = element_text(angle = 75, hjust = 1, size=8)) +
scale_fill_manual(values=mycols)
plot (ggMD)
mycols = rep (c ("#FF6666", "#CCFF66", "#5D2E8C", "#2EC4B6", "#F1E8B8", "EE60F0", "EC9DED", "F1CEF1", "2865F1", "6792F3", "A5BDF5", "E9E5E1", "E71367", "13E790", "84EBC1"), 5)
ggMD = ggplot (md, aes (x=X, y=value, fill=X)) +
facet_wrap(~prop) + geom_boxplot() +
ylab("Avg (imputations) Mean (obs in imp) Difference") +
xlab("") +
theme(legend.position = 'none',
axis.text.x = element_text(angle = 75, hjust = 1, size=8)) +
scale_fill_manual(values=mycols)
plot (ggMD)
mycols = rep (c ("#FF6666", "#CCFF66", "#5D2E8C", "#2EC4B6", "#F1E8B8", "#EE60F0", "#EC9DED", "#F1CEF1", "#2865F1", "#6792F3", "#A5BDF5", "#E9E5E1", "#E71367", "#13E790", "#84EBC1"), 5)
ggMD = ggplot (md, aes (x=X, y=value, fill=X)) +
facet_wrap(~prop) + geom_boxplot() +
ylab("Avg (imputations) Mean (obs in imp) Difference") +
xlab("") +
theme(legend.position = 'none',
axis.text.x = element_text(angle = 75, hjust = 1, size=8)) +
scale_fill_manual(values=mycols)
plot (ggMD)
mycols = rep (c ("#FF6666", "#CCFF66", "#5D2E8C", "#2EC4B6", "#F1E8B8", "#EE60F0", "#EC9DED", "#F1CEF1", "#2865F1", "#6792F3", "#A5BDF5", "#E9E5E1", "#E71367", "#13E790", "#99EAC9"), 5)
ggMAE = ggplot (mae, aes (x=X, y=value, fill=X)) +
facet_wrap(~prop) + geom_boxplot() +
ylab("Avg (imputations) Mean Abs Error") +
xlab("") +
theme(legend.position = 'none',
axis.text.x = element_text(angle = 75, hjust = 1, size=8)) +
scale_fill_manual(values=mycols)
plot (ggMAE)
ggMSE = ggplot (mse, aes (x=X, y=value, fill=X)) +
facet_wrap(~prop) + geom_boxplot() +
ylab("Avg (imputations) Mean Squared Error") +
xlab("") +
theme(legend.position = 'none',
axis.text.x = element_text(angle = 75, hjust = 1, size=8)) +
scale_fill_manual(values=mycols)
plot (ggMSE)
makePlots = function (data){
md = melt (select (data, X, miceAvgMD, rfAvgMD, mech, prop), id.vars=c("X", "mech", "prop"))
md$variable = factor (md$variable, labels=c("MICE", "RF"))
mae = melt (select (data, X, miceAvgMAE, rfAvgMAE, mech, prop), id.vars=c("X", "mech", "prop"))
mae$variable = factor (mae$variable, labels=c("MICE", "RF"))
mse = melt (select (data, X, miceAvgMSE, rfAvgMSE, mech, prop), id.vars=c("X", "mech", "prop"))
mse$variable = factor (mse$variable, labels=c("MICE", "RF"))
ggMD = ggplot (md, aes (x=X, y=value, fill=X)) +
facet_wrap(~prop) + geom_boxplot() +
ylab("Avg (imputations) Mean (obs in imp) Difference") +
xlab("") +
theme(legend.position = 'none',
axis.text.x = element_text(angle = 75, hjust = 1, size=8)) +
scale_fill_manual(values=mycols)
ggMAE = ggplot (mae, aes (x=X, y=value, fill=X)) +
facet_wrap(~prop) + geom_boxplot() +
ylab("Avg (imputations) Mean Abs Error") +
xlab("") +
theme(legend.position = 'none',
axis.text.x = element_text(angle = 75, hjust = 1, size=8)) +
scale_fill_manual(values=mycols)
return (list ('md'=ggMD, 'mae'=ggMAE))
}
plotMCAR = makePlots(mcar)
plotMAR = makePlots(mar)
plotMAR = makePlots(mar)
plotMNAR1 = makePlots(mnar1)
plotMNAR2 = makePlots(mcar2)
plotMNAR2 = makePlots(mnar2)
plot (plotMCAR$md)
?ylim
?coord_cartesian
plot (plotMCAR$md + coord_cartesian(ylim=c(-0.01, 0.01)))
mycols = rep (c ("#FF6666", "#CCFF66", "#5D2E8C", "#2EC4B6", "#F1E8B8", "#EE60F0", "#EC9DED", "#F1CEF1", "#FFAA00", "#FFCD6A", "#FFDC97", "#A0A0A0", "#E9E5E1", "#FFDC97", "#CDFFFD"), 5)
ggMD = ggplot (md, aes (x=X, y=value, fill=X)) +
facet_wrap(~prop) + geom_boxplot() +
ylab("Avg (imputations) Mean (obs in imp) Difference") +
xlab("") +
theme(legend.position = 'none',
axis.text.x = element_text(angle = 75, hjust = 1, size=8)) +
scale_fill_manual(values=mycols)
ggMAE = ggplot (mae, aes (x=X, y=value, fill=X)) +
facet_wrap(~prop) + geom_boxplot() +
ylab("Avg (imputations) Mean Abs Error") +
xlab("") +
theme(legend.position = 'none',
axis.text.x = element_text(angle = 75, hjust = 1, size=8)) +
scale_fill_manual(values=mycols)
makePlots = function (data){
md = melt (select (data, X, miceAvgMD, rfAvgMD, mech, prop), id.vars=c("X", "mech", "prop"))
md$variable = factor (md$variable, labels=c("MICE", "RF"))
mae = melt (select (data, X, miceAvgMAE, rfAvgMAE, mech, prop), id.vars=c("X", "mech", "prop"))
mae$variable = factor (mae$variable, labels=c("MICE", "RF"))
mse = melt (select (data, X, miceAvgMSE, rfAvgMSE, mech, prop), id.vars=c("X", "mech", "prop"))
mse$variable = factor (mse$variable, labels=c("MICE", "RF"))
ggMD = ggplot (md, aes (x=X, y=value, fill=X)) +
facet_wrap(~prop) + geom_boxplot() +
ylab("Avg (imputations) Mean (obs in imp) Difference") +
xlab("") +
theme(legend.position = 'none',
axis.text.x = element_text(angle = 75, hjust = 1, size=8)) +
scale_fill_manual(values=mycols)
ggMAE = ggplot (mae, aes (x=X, y=value, fill=X)) +
facet_wrap(~prop) + geom_boxplot() +
ylab("Avg (imputations) Mean Abs Error") +
xlab("") +
theme(legend.position = 'none',
axis.text.x = element_text(angle = 75, hjust = 1, size=8)) +
scale_fill_manual(values=mycols)
return (list ('md'=ggMD, 'mae'=ggMAE))
}
plotMCAR = makePlots(mcar)
plot (plotMCAR$md)
plot (plotMCAR$md + coord_cartesian(ylim=c(-0.01, 0.01)))
mycols = rep (c ("#FF6666", "#CCFF66", "#5D2E8C", "#2EC4B6", "#F1E8B8", "#EE60F0", "#EC9DED", "#F1CEF1", "#FFAA00", "#FFCD6A", "#FFDC97", "#A0A0A0", "#E9E5E1", "#71FCFE", "#CDFFFD"), 5)
makePlots = function (data){
md = melt (select (data, X, miceAvgMD, rfAvgMD, mech, prop), id.vars=c("X", "mech", "prop"))
md$variable = factor (md$variable, labels=c("MICE", "RF"))
mae = melt (select (data, X, miceAvgMAE, rfAvgMAE, mech, prop), id.vars=c("X", "mech", "prop"))
mae$variable = factor (mae$variable, labels=c("MICE", "RF"))
mse = melt (select (data, X, miceAvgMSE, rfAvgMSE, mech, prop), id.vars=c("X", "mech", "prop"))
mse$variable = factor (mse$variable, labels=c("MICE", "RF"))
ggMD = ggplot (md, aes (x=X, y=value, fill=X)) +
facet_wrap(~prop) + geom_boxplot() +
ylab("Avg (imputations) Mean (obs in imp) Difference") +
xlab("") +
theme(legend.position = 'none',
axis.text.x = element_text(angle = 75, hjust = 1, size=8)) +
scale_fill_manual(values=mycols)
ggMAE = ggplot (mae, aes (x=X, y=value, fill=X)) +
facet_wrap(~prop) + geom_boxplot() +
ylab("Avg (imputations) Mean Abs Error") +
xlab("") +
theme(legend.position = 'none',
axis.text.x = element_text(angle = 75, hjust = 1, size=8)) +
scale_fill_manual(values=mycols)
return (list ('md'=ggMD, 'mae'=ggMAE))
}
plotMCAR = makePlots(mcar)
plot (plotMCAR$md)
plot (plotMCAR$md + coord_cartesian(ylim=c(-0.01, 0.01)))
plotMAR = makePlots(mar)
plotMNAR1 = makePlots(mnar1)
plotMNAR2 = makePlots(mnar2)
plot (plotMCAR$mae)
plot (plotMCAR$mae + coord_cartesian(ylim=c(-0.01, 0.01)))
plot (plotMCAR$mae + coord_cartesian(ylim=c(0, 0.03)))
plot (plotMAR$md)
plot (plotMAR$md + coord_cartesian(ylim=c(-0.01, 0.01)))
plot (plotMAR$mae)
plot (plotMAR$mae + coord_cartesian(ylim=c(0, 0.03)))
plot (plotMNAR1$md)
plot (plotMNAR1$md + coord_cartesian(ylim=c(-0.01, 0.01)))
?facet_wrap
makePlots = function (data){
md = melt (select (data, X, miceAvgMD, rfAvgMD, mech, prop), id.vars=c("X", "mech", "prop"))
md$variable = factor (md$variable, labels=c("MICE", "RF"))
mae = melt (select (data, X, miceAvgMAE, rfAvgMAE, mech, prop), id.vars=c("X", "mech", "prop"))
mae$variable = factor (mae$variable, labels=c("MICE", "RF"))
mse = melt (select (data, X, miceAvgMSE, rfAvgMSE, mech, prop), id.vars=c("X", "mech", "prop"))
mse$variable = factor (mse$variable, labels=c("MICE", "RF"))
ggMD = ggplot (md, aes (x=X, y=value, fill=X)) +
facet_wrap(~prop+variable, nrow=2) + geom_boxplot() +
ylab("Avg (imputations) Mean (obs in imp) Difference") +
xlab("") +
theme(legend.position = 'none',
axis.text.x = element_text(angle = 75, hjust = 1, size=8)) +
scale_fill_manual(values=mycols)
ggMAE = ggplot (mae, aes (x=X, y=value, fill=X)) +
facet_wrap(~prop+variable, nrow=2) + geom_boxplot() +
ylab("Avg (imputations) Mean Abs Error") +
xlab("") +
theme(legend.position = 'none',
axis.text.x = element_text(angle = 75, hjust = 1, size=8)) +
scale_fill_manual(values=mycols)
return (list ('md'=ggMD, 'mae'=ggMAE))
}
plotMCAR = makePlots(mcar)
plotMAR = makePlots(mar)
plotMNAR1 = makePlots(mnar1)
plotMNAR2 = makePlots(mnar2)
plot (plotMCAR$md)
makePlots = function (data){
md = melt (select (data, X, miceAvgMD, rfAvgMD, mech, prop), id.vars=c("X", "mech", "prop"))
md$variable = factor (md$variable, labels=c("MICE", "RF"))
mae = melt (select (data, X, miceAvgMAE, rfAvgMAE, mech, prop), id.vars=c("X", "mech", "prop"))
mae$variable = factor (mae$variable, labels=c("MICE", "RF"))
mse = melt (select (data, X, miceAvgMSE, rfAvgMSE, mech, prop), id.vars=c("X", "mech", "prop"))
mse$variable = factor (mse$variable, labels=c("MICE", "RF"))
ggMD = ggplot (md, aes (x=X, y=value, fill=X)) +
facet_wrap(~variable+prop, nrow=2) + geom_boxplot() +
ylab("Avg (imputations) Mean (obs in imp) Difference") +
xlab("") +
theme(legend.position = 'none',
axis.text.x = element_text(angle = 75, hjust = 1, size=8)) +
scale_fill_manual(values=mycols)
ggMAE = ggplot (mae, aes (x=X, y=value, fill=X)) +
facet_wrap(~variable+prop, nrow=2) + geom_boxplot() +
ylab("Avg (imputations) Mean Abs Error") +
xlab("") +
theme(legend.position = 'none',
axis.text.x = element_text(angle = 75, hjust = 1, size=8)) +
scale_fill_manual(values=mycols)
return (list ('md'=ggMD, 'mae'=ggMAE))
}
plotMCAR = makePlots(mcar)
plotMAR = makePlots(mar)
plotMNAR1 = makePlots(mnar1)
plotMNAR2 = makePlots(mnar2)
plot (plotMCAR$md)
plot (plotMCAR$md + coord_cartesian(ylim=c(-0.01, 0.01)))
)
plot (plotMCAR$md + coord_cartesian(ylim=c(-0.005, 0.005)))
plot (plotMCAR$md + coord_cartesian(ylim=c(-0.005, 0.005)))
plot (plotMCAR$mae)
plot (plotMAR$md)
plot (plotMAR$md + coord_cartesian(ylim=c(-0.005, 0.005)))
plot (plotMAR$md + coord_cartesian(ylim=c(-0.01, 0.01)))
plot (plotMAR$mae)
plot (plotMAR$mae + coord_cartesian(ylim=c(0, 0.03)))
plot (plotMAR$mae + coord_cartesian(ylim=c(0, 0.05)))
plot (plotMAR$mae)
plot (plotMAR$mae + coord_cartesian(ylim=c(0, 0.05)))
plot (plotMNAR1$md)
plot (plotMNAR1$md + coord_cartesian(ylim=c(-0.01, 0.01)))
plot (plotMNAR1$mae)
plot (plotMNAR1$mae + coord_cartesian(ylim=c(0, 0.05)))
plot (plotMNAR2$md)
plot (plotMNAR2$md + coord_cartesian(ylim=c(-0.01, 0.01)))
plot (plotMNAR2$mae)
plot (plotMNAR2$mae + coord_cartesian(ylim=c(0, 0.05)))
plot (plotMNAR2$mae + coord_cartesian(ylim=c(0, 0.05)))
library(ggplot2)
library(gridExtra)
library(grid)
library(xtable)
library(kableExtra)
library(dplyr)
library(reshape2)
rootdir = "~/Box Sync/Mentoring/Students/Getz_Kylie/results"
regDir = file.path (rootdir, "2022_05_22")
ldDir = file.path (rootdir, "2022_05_31_lowDim")
simpDir = file.path (rootdir, "2022_05_31_simple")
getDfs <- function (mdm, pc, fdir=regDir, aedir=regDir){
# Oracle, CC, MICE, and RF
avgName = paste0 ("Avgs_", mdm, "_", pc, ".csv")
percName = paste0 ("Percentiles_", mdm, "_", pc, ".csv")
avgDf = read.csv (file.path (fdir, avgName))
percDf = read.csv (file.path (fdir, percName))
percDf$X = NULL
# AE
avgName = paste0 ("AE", avgName)
percName = paste0 ("AE", percName)
aeAvg =  read.csv (file.path (aedir, avgName))
colnames (aeAvg) = c ("X", "biasAE", "seAE", "coverageAE", "mseAE")
aeAvg$X = avgDf$X
aePerc =  read.csv (file.path (fdir, percName))
aePerc$X = NULL
colnames(aePerc)[1] = 'treat'
aePerc$method = 'DAE'
avgDf = left_join (avgDf, aeAvg, by='X')
percDf = rbind (percDf, aePerc)
percDf$prop = pc
percDf$mech = mdm
return (list ('avg'=avgDf, 'perc'=percDf))
}
MCAR10 = getDfs ('MCAR', 10)
MCAR30 = getDfs ('MCAR', 30)
MCAR50 = getDfs ('MCAR', 50)
MCAR = rbind (MCAR10$perc, MCAR30$perc, MCAR50$perc)
MAR10 = getDfs ('MAR', 10)
MAR30 = getDfs ('MAR', 30)
MAR50 = getDfs ('MAR', 50)
MAR = rbind (MAR10$perc, MAR30$perc, MAR50$perc)
MNAR10a = getDfs ('MNAR1', 10)
MNAR30a = getDfs ('MNAR1', 30)
MNAR50a = getDfs ('MNAR1', 50)
MNAR1 = rbind (MNAR10a$perc, MNAR30a$perc, MNAR50a$perc)
MNAR10b = getDfs ('MNAR2', 10)
MNAR30b = getDfs ('MNAR2', 30)
MNAR50b = getDfs ('MNAR2', 50)
MNAR2 = rbind (MNAR10b$perc, MNAR30b$perc, MNAR50b$perc)
allData = rbind (MCAR, MAR, MNAR1, MNAR2)
mycols = c ("#D55E00", "#E69F00", "#2271B2", "#3DB7E9", "#359B73")
plotOne <- function (data, mdm, variable){
varnames = names (data)
keep = varnames[which (varnames==variable)]
data$mech = factor (data$mech)
data$method = factor (data$method, levels=c("ORACLE", "CC", "MICE", "RF", "DAE"))
data = dplyr::select (data, all_of(keep), mech, prop, method)
colnames (data)[1] = 'y'
dat = dplyr::filter (data, mech==mdm)
datOracle = dplyr::filter (dat, method=='ORACLE' & prop==10)
dat = dplyr::filter (dat, !(method=='ORACLE'))
datOracle$prop = ""
fdat = rbind (datOracle, dat)
gg = ggplot(fdat, aes(x=method, y=y, fill=method)) +
ylab("Estimate - True") +
xlab("") +
ggtitle(mdm) +
geom_boxplot() +
#    geom_errorbar(aes(ymax = Upper, ymin = Lower), position = "dodge",size = 1.5) +
geom_hline(yintercept=0, linetype="dashed", color="black") +
#    geom_point(shape=16,colour="black",size=2) +
#    facet_grid(cols=vars(prop), scales = "free_x", space="free_x", switch="both") +
facet_grid(cols=vars(prop), scales = "free_x", space="free", switch="both") +
theme(panel.spacing = unit(1, "lines"),
strip.background = element_blank(),
axis.line = element_line(colour = "grey"),
panel.grid.major.y = element_line(colour = "grey"),
strip.placement = "outside",
axis.text.x = element_text(angle = 45, hjust = 1, size=8),
panel.background = element_rect(fill = 'white', colour = 'white')) +
scale_x_discrete(breaks=c("CC","MICE","RF","DAE","ORACLE")) +
theme(legend.position = 'none') +
scale_fill_manual(values=mycols)
return (gg)
}
percPlot = function (data, variable){
mcar = plotOne (data, mdm='MCAR', variable)
mar = plotOne (data, mdm='MAR', variable)
mnar1 = plotOne (data, mdm='MNAR1', variable)
mnar2 = plotOne (data, mdm='MNAR2', variable)
op = grid.arrange(mcar, mar, mnar1, mnar2, nrow = 2)
return (op)
}
percPlot(allData, 'treat')
percPlot(allData, 'genderf')
percPlot(allData, 'reth_black')
percPlot(allData, 'reth_hisp')
percPlot(allData, 'reth_oth')
percPlot(allData, 'practypec')
percPlot(allData, 'b.ecogvalue')
percPlot(allData, 'smokey')
percPlot(allData, 'dgradeh')
percPlot(allData, 'surgery')
percPlot(allData, 'site_ureter')
percPlot(allData, 'site_renal')
percPlot(allData, 'site_urethra')
percPlot(allData, 'age')
percPlot(allData, 'var1')
percPlot(allData, 'var2')
vars = names (allData)[1:16]
for (i in 1:length (vars)){
pdf (paste0 ('~/Desktop/mi_plots/regular_', vars[i], '.pdf'))
percPlot(allData, vars[i])
dev.off()
}
MCAR10 = getDfs ('MCAR', 10, regDir, ldDir)
MCAR30 = getDfs ('MCAR', 30, regDir, ldDir)
MCAR50 = getDfs ('MCAR', 50, regDir, ldDir)
MCAR = rbind (MCAR10$perc, MCAR30$perc, MCAR50$perc)
MAR10 = getDfs ('MAR', 10, regDir, ldDir)
MAR30 = getDfs ('MAR', 30, regDir, ldDir)
MAR50 = getDfs ('MAR', 50, regDir, ldDir)
MAR = rbind (MAR10$perc, MAR30$perc, MAR50$perc)
MNAR10a = getDfs ('MNAR1', 10, regDir, ldDir)
MNAR30a = getDfs ('MNAR1', 30, regDir, ldDir)
MNAR50a = getDfs ('MNAR1', 50, regDir, ldDir)
MNAR1 = rbind (MNAR10a$perc, MNAR30a$perc, MNAR50a$perc)
MNAR10b = getDfs ('MNAR2', 10, regDir, ldDir)
MNAR30b = getDfs ('MNAR2', 30, regDir, ldDir)
MNAR50b = getDfs ('MNAR2', 50, regDir, ldDir)
MNAR2 = rbind (MNAR10b$perc, MNAR30b$perc, MNAR50b$perc)
allData = rbind (MCAR, MAR, MNAR1, MNAR2)
mycols = c ("#D55E00", "#E69F00", "#2271B2", "#3DB7E9", "#359B73")
plotOne <- function (data, mdm, variable){
varnames = names (data)
keep = varnames[which (varnames==variable)]
data$mech = factor (data$mech)
data$method = factor (data$method, levels=c("ORACLE", "CC", "MICE", "RF", "DAE"))
data = dplyr::select (data, all_of(keep), mech, prop, method)
colnames (data)[1] = 'y'
dat = dplyr::filter (data, mech==mdm)
datOracle = dplyr::filter (dat, method=='ORACLE' & prop==10)
dat = dplyr::filter (dat, !(method=='ORACLE'))
datOracle$prop = ""
fdat = rbind (datOracle, dat)
gg = ggplot(fdat, aes(x=method, y=y, fill=method)) +
ylab("Estimate - True") +
xlab("") +
ggtitle(mdm) +
geom_boxplot() +
#    geom_errorbar(aes(ymax = Upper, ymin = Lower), position = "dodge",size = 1.5) +
geom_hline(yintercept=0, linetype="dashed", color="black") +
#    geom_point(shape=16,colour="black",size=2) +
#    facet_grid(cols=vars(prop), scales = "free_x", space="free_x", switch="both") +
facet_grid(cols=vars(prop), scales = "free_x", space="free", switch="both") +
theme(panel.spacing = unit(1, "lines"),
strip.background = element_blank(),
axis.line = element_line(colour = "grey"),
panel.grid.major.y = element_line(colour = "grey"),
strip.placement = "outside",
axis.text.x = element_text(angle = 45, hjust = 1, size=8),
panel.background = element_rect(fill = 'white', colour = 'white')) +
scale_x_discrete(breaks=c("CC","MICE","RF","DAE","ORACLE")) +
theme(legend.position = 'none') +
scale_fill_manual(values=mycols)
return (gg)
}
percPlot = function (data, variable){
mcar = plotOne (data, mdm='MCAR', variable)
mar = plotOne (data, mdm='MAR', variable)
mnar1 = plotOne (data, mdm='MNAR1', variable)
mnar2 = plotOne (data, mdm='MNAR2', variable)
op = grid.arrange(mcar, mar, mnar1, mnar2, nrow = 2)
return (op)
}
percPlot(allData, 'treat')
percPlot(allData, 'genderf')
percPlot(allData, 'b.ecogvalue')
vars = names (allData)[1:16]
for (i in 1:length (vars)){
pdf (paste0 ('~/Desktop/mi_plots/lowDim_', vars[i], '.pdf'))
percPlot(allData, vars[i])
dev.off()
}
MCAR10 = getDfs ('MCAR', 10, simpDir, simpDir)
library(ggplot2)
library(gridExtra)
library(grid)
library(xtable)
library(kableExtra)
library(dplyr)
library(reshape2)
rootdir = "~/Box Sync/Mentoring/Students/Getz_Kylie/results"
regDir = file.path (rootdir, "2022_05_22")
ldDir = file.path (rootdir, "2022_05_31_lowDim")
simpDir = file.path (rootdir, "2022_05_31_simple")
getDfs <- function (mdm, pc, fdir=regDir, aedir=regDir){
# Oracle, CC, MICE, and RF
avgName = paste0 ("Avgs_", mdm, "_", pc, ".csv")
percName = paste0 ("Percentiles_", mdm, "_", pc, ".csv")
avgDf = read.csv (file.path (fdir, avgName))
percDf = read.csv (file.path (fdir, percName))
percDf$X = NULL
# AE
avgName = paste0 ("AE", avgName)
percName = paste0 ("AE", percName)
aeAvg =  read.csv (file.path (aedir, avgName))
colnames (aeAvg) = c ("X", "biasAE", "seAE", "coverageAE", "mseAE")
aeAvg$X = avgDf$X
aePerc =  read.csv (file.path (fdir, percName))
aePerc$X = NULL
colnames(aePerc)[1] = 'treat'
aePerc$method = 'DAE'
avgDf = left_join (avgDf, aeAvg, by='X')
percDf = rbind (percDf, aePerc)
percDf$prop = pc
percDf$mech = mdm
return (list ('avg'=avgDf, 'perc'=percDf))
}
mdm='MCAR'
pc = 30
fdir=simpDir
aedir=simpDir
# Oracle, CC, MICE, and RF
avgName = paste0 ("Avgs_", mdm, "_", pc, ".csv")
percName = paste0 ("Percentiles_", mdm, "_", pc, ".csv")
avgDf = read.csv (file.path (fdir, avgName))
percDf = read.csv (file.path (fdir, percName))
percDf$X = NULL
# AE
avgName = paste0 ("AE", avgName)
percName = paste0 ("AE", percName)
aeAvg =  read.csv (file.path (aedir, avgName))
colnames (aeAvg) = c ("X", "biasAE", "seAE", "coverageAE", "mseAE")
aeAvg$X = avgDf$X
aePerc =  read.csv (file.path (fdir, percName))
aePerc$X = NULL
colnames(aePerc)[1] = 'treat'
aePerc$method = 'DAE'
avgDf = left_join (avgDf, aeAvg, by='X')
percDf = rbind (percDf, aePerc)
avgDf
head (avgDf)
head(aeAvg)
avgDf = read.csv (file.path (fdir, avgName))
head(avgDf)
fdir=simpDir
avgDf = read.csv (file.path (fdir, avgName))
percDf = read.csv (file.path (fdir, percName))
percDf$X = NULL
head(avgDf)
